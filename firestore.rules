rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Regras para usuários autenticados
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Regras para assinantes
    match /subscribers/{subscriberId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if false; // Apenas via Admin SDK
    }
    
    // Regras para pagamentos
    match /payments/{paymentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if false; // Apenas via Admin SDK
    }
    
    // Regras para conteúdo VIP
    match /vipContent/{contentId} {
      allow read: if request.auth != null && isActiveSubscriber();
      allow write: if false; // Apenas via Admin SDK
    }
    
    // Regras para visualizações de conteúdo
    match /contentViews/{viewId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Função para verificar se o usuário é um assinante ativo
    function isActiveSubscriber() {
      return exists(/databases/$(database)/documents/subscribers/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/subscribers/$(request.auth.uid)).data.status == 'active';
    }
    
    // Regras gerais (temporária para desenvolvimento)
    match /{document=**} {
      allow read, write: if true;
    }
  }
}
